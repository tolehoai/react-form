{"version":3,"sources":["components/CustomField/index.jsx","components/PictureField/index.jsx","components/SelectField/index.jsx","components/form/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomField","props","placeholder","type","field","label","form","name","console","log","FormGroup","row","Label","sm","Col","Input","id","autoComplete","defaultProps","PictureField","randomURL","picture","value","randomID","Math","trunc","random","handleClickRandom","a","setFieldValue","Button","color","onClick","src","alt","SelectField","options","selected","find","option","onChange","selectedOption","Form1","initialValues","firstname","job","onSubmit","values","actions","formikProps","errors","touched","component","check","size","offset","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86ad3d86.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, InputGroup, Label, Col, Row, Input } from \"reactstrap\";\r\n\r\nCustomField.propTypes = {\r\n  field: PropTypes.object,\r\n  form: PropTypes.object,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string,\r\n};\r\n\r\nCustomField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n};\r\n\r\nfunction CustomField(props) {\r\n  const { placeholder, type, field, form, label } = props;\r\n  const { name } = field;\r\n  console.log(field);\r\n  return (\r\n    <div>\r\n      <FormGroup row>\r\n        <Label sm={2}>{label}</Label>\r\n        <Col sm={10}>\r\n          <Input\r\n            type={type}\r\n            id={name}\r\n            {...field}\r\n            placeholder={placeholder}\r\n            autoComplete=\"off\"\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  FormGroup,\r\n  InputGroup,\r\n  Label,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\nPictureField.propTypes = {\r\n  field: PropTypes.object,\r\n  form: PropTypes.object,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nPictureField.defaultProps = {\r\n  label: \"\",\r\n  placeholder: \"\",\r\n};\r\n\r\nfunction PictureField(props) {\r\n  const { placeholder, type, field, form, label, picture } = props;\r\n  const { name, value } = field;\r\n\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    form.setFieldValue(field.name, selectedOption.value);\r\n  };\r\n\r\n  const randomURL = () => {\r\n    const randomID = Math.trunc(Math.random() * 2000);\r\n    return `https://picsum.photos/id/${randomID}/300/300.jpg`;\r\n  };\r\n\r\n  const handleClickRandom = async () => {\r\n    // console.log(randomURL());\r\n    console.log(field.name);\r\n    form.setFieldValue(field.name, randomURL());\r\n    console.log(field.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormGroup row>\r\n        <Label sm={2}>{label}</Label>\r\n        <Col sm={10}>\r\n          <Button\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            {...field}\r\n            onClick={handleClickRandom}\r\n          >\r\n            Random Picture\r\n          </Button>{\" \"}\r\n        </Col>\r\n        <Col>\r\n          <img src={field.value} alt=\"Opps... hình này không có, bấm lại đi\" />\r\n        </Col>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PictureField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormGroup, InputGroup, Label, Col, Row, Input } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\n\r\nSelectField.propTypes = {\r\n  field: PropTypes.object,\r\n  form: PropTypes.object,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  option: PropTypes.array,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n  type: \"text\",\r\n  label: \"\",\r\n  placeholder: \"\",\r\n  option: [],\r\n};\r\n\r\nfunction SelectField(props) {\r\n  const { placeholder, type, field, form, label, options } = props;\r\n  const { name, value } = field;\r\n  //   console.log(\"Field:\", field);\r\n  //   console.log(options);\r\n  //   console.log(value);\r\n  const selected = options.find((option) => option.value === value);\r\n  console.log(selected);\r\n  const handleSelectedOptionChange = (selectedOption) => {\r\n    // console.log(\"Selected option\", selectedOption.value);\r\n    // console.log(field);\r\n    // const changeEvent = {\r\n    //   target: {\r\n    //     job: \"abc\",\r\n    //     value: \"abc\",\r\n    //   },\r\n    // };\r\n    // field.onChange(selectedOption);\r\n    // console.log(options);\r\n    // console.log(\"Field name: \", field.name);\r\n    // console.log(\"Option value: \", selectedOption.value);\r\n    form.setFieldValue(field.name, selectedOption.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <FormGroup row>\r\n        <Label sm={2}>{label}</Label>\r\n        <Col sm={10}>\r\n          <Select\r\n            // type={type}\r\n            id={name}\r\n            options={options}\r\n            {...field}\r\n            value={selected}\r\n            onChange={handleSelectedOptionChange}\r\n            // onChange={(options: Option) =>\r\n            //   form.setFieldValue(field.name, options.value)\r\n            // }\r\n            // placeholder={placeholder}\r\n          />\r\n        </Col>\r\n      </FormGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectField;\r\n","import CustomField from \"components/CustomField\";\r\nimport PictureField from \"components/PictureField\";\r\nimport SelectField from \"components/SelectField\";\r\nimport { Formik, Form, FastField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button, Col, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nForm1.propTypes = {};\r\n\r\nfunction Form1(props) {\r\n  const options = [\r\n    { value: \"foo\", label: \"Foo\" },\r\n    { value: \"bar\", label: \"Bar\" },\r\n    { value: \"baz\", label: \"Baz\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ firstname: \"\", job: null, picture: null }}\r\n        onSubmit={(values, actions) => {\r\n          // alert(JSON.stringify(values, null, 2));\r\n          console.log(values);\r\n        }}\r\n      >\r\n        {(formikProps) => {\r\n          //do here\r\n          const { values, errors, touched } = formikProps;\r\n          // console.log({ values, errors, touched });\r\n\r\n          return (\r\n            <Form>\r\n              <FastField\r\n                name=\"firstname\"\r\n                component={CustomField}\r\n                label=\"Firstname\"\r\n                placeholder=\"Input firstname\"\r\n              />\r\n              <FastField\r\n                name=\"job\"\r\n                component={SelectField}\r\n                label=\"Firstname\"\r\n                placeholder=\"Input firstname\"\r\n                options={options}\r\n              />\r\n              <FastField\r\n                name=\"picture\"\r\n                component={PictureField}\r\n                label=\"Picture\"\r\n              />\r\n              <FormGroup check row>\r\n                <Col sm={{ size: 10, offset: 2 }}>\r\n                  <Button color=\"success\" type=\"submit\">\r\n                    Sign up\r\n                  </Button>{\" \"}\r\n                </Col>\r\n              </FormGroup>{\" \"}\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form1;\r\n","\nimport Form1 from 'components/form';\nimport InputForm from 'components/input-form';\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <InputForm /> */}\n      <Form1 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}